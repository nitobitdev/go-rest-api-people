{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/peopels": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get all people",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.GetAllPeopleSwagger"
                        }
                    }
                }
            }
        },
        "/peoples": {
            "post": {
                "description": "Insert a person JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Store a new people",
                "parameters": [
                    {
                        "description": "Insert People",
                        "name": "people",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestPerson"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                }
            }
        },
        "/peoples/{id}": {
            "get": {
                "description": "Get a People.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get People By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Get People By Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a People.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Delete People By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delete People By Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Delete People",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/peoples{id}": {
            "put": {
                "description": "Update a person JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Update a people",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Update People By Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update People",
                        "name": "people",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestPerson"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success Update People",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Person": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RequestPerson": {
            "type": "object",
            "required": [
                "address",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.GetAllPeopleSwagger": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "GET_SUCCESS"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Person"
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    }
}